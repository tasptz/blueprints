blueprint:
  name: Wake-up light alarm with sunrise effect
  description: 'A wake-up light alarm with a brightness and color temperature sunrise effect.'
  domain: automation
  input:
    light_entity:
      name: Wake-up light entity
      description: The light to control.
      selector:
        entity:
          domain: light
    sunrise_time:
      name: Sunrise time
      description: Time to start the sunrise.
      default: '07:00:00'
      selector:
        time:
    duration:
      name: Sunrise duration
      default: 25
      selector:
        number:
          min: 5
          max: 60
          step: 1
          unit_of_measurement: min
          mode: slider
variables:
  duration: !input 'duration'
  sunrise_time: !input 'sunrise_time'
  start_brightness: 1
  end_brightness: 255
  start_colortemp: 500
  end_colortemp: 153
  repeats: '{{ (duration|float * 60.0 / 10.0)|int }}'
trigger:
  platform: time
  at: !input 'sunrise_time'
action:
  - repeat:
      sequence:
        - service: light.turn_on
          data:
            brightness: '{{ start_brightness + (((repeat.index - 1)|float / (repeats - 1)|float) * (end_brightness - start_brightness)|float)|int }}'
            color_temp: '{{ start_colortemp  + (((repeat.index - 1)|float / (repeats - 1)|float) * (end_colortemp  - start_colortemp )|float)|int }}'
          entity_id: !input 'light_entity'
        - delay: 10
      until:
        - condition: template
          value_template: '{{ repeat.index == repeats }}'
mode: restart
